import os
import csv
from PIL import Image

def convert_labels_to_csv(images_path, labels_path, csv_file):
    with open(csv_file, 'w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(['image_path', 'xmin', 'xmax', 'ymin', 'ymax', 'label', 'image_width', 'image_height'])
        
        for image in os.listdir(images_path):
                image_name = os.path.splitext(image)[0]
                image_path = os.path.join(images_path, image)
                txt_path = os.path.join(labels_path, image_name + '.txt')
                
                if os.path.exists(txt_path):
                    with open(txt_path, 'r') as f:
                        for line in f:
                            line = line.strip().split()
                            line = [float(x) for x in line]

                            image_width, image_height = get_image_dimensions(image_path)
                            # label, x, y, w, h = line
                            xmin, ymin, xmax, ymax = get_bbox_from_yolo_format(image_width, image_height, line[1:5])
                            label = 'Arthropod'
                            writer.writerow([image, xmin, xmax, ymin, ymax, label, image_width, image_height])

def get_bbox_from_yolo_format(image_width, image_height, bbox):
    x, y, w, h = bbox
    xmin = int((x - w / 2) * image_width)
    xmax = int((x + w / 2) * image_width)
    ymin = int((y - h / 2) * image_height)
    ymax = int((y + h / 2) * image_height)
    return xmin, ymin, xmax, ymax

def get_image_dimensions(image_path):
    with Image.open(image_path) as img:
        image_width, image_height = img.size
    return image_width, image_height

# Usage example
images_path = '/mnt/disk1/datasets/iNaturalist/Arthropods/LIMIT1/dataset/images'
labels_path = '/mnt/disk1/datasets/iNaturalist/Arthropods/LIMIT1/dataset/labels'
csv_file = 'labels.csv'
convert_labels_to_csv(images_path, labels_path, csv_file)
